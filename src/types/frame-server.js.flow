import { type Node, type ComponentType } from "react"

declare module "frame/server" {

	declare type Context<Globals> = {
		globals : Globals,
	}

	declare export function useFrame<Globals>() : Context<Globals>
	declare export function init (Component : ComponentType<mixed>, dev : boolean) : void

	declare type PictureProps = {
		// The image to get the sources from
		image : ImageAsset,

		// The sizes prop to pass to the source and img tags
		sizes : string,

		// What direction to pick the srcSet in
		dimension? : "w" | "h",

		// The format to use for the fallback img
		fallbackFormat? : ImageFormat,

		...,
	}

	declare export function Picture(props : PictureProps) : Node

	declare type SrcSet = {
		src : string,
		srcSet : string,
	}

	declare export var srcSet : {
		w : (ImageAsset, ImageFormat) => SrcSet,
		h : (ImageAsset, ImageFormat) => SrcSet,
	}

	declare export type ImageAsset = {
		type : "image",
		id : string,
		width : number,
		height : number,
		formats : ImageFormat[],
		matrix : string[],
		color : ?string,
		gradient : ?string[],
	}

	declare export type JSONAsset = {
		type : "json",
		id : string,
		content : mixed,
	}

	declare export type MarkdownAsset = {
		id : string,
		type : "markdown",
		html : string,
		prematter : mixed,
	}

	declare export type YAMLAsset = {
		type : "yaml",
		id : string,
		content : mixed,
	}

	declare export type ImageFormat = "jpeg" | "webp" | "png" | "tiff" | "gif"
	declare export type Asset = ImageAsset | JSONAsset | YAMLAsset | MarkdownAsset


	declare export type ImageConfig = {
		gip : boolean,
		sizes : number[],
		formats : {
			[k : ImageFormat | "*"] : ImageFormat[],
			...,
		},
		quality? : number | {
			[k : ImageFormat | "*"] : number,
			...,
		},
	}

	declare type ESModule<T> = { default : T, ... }
	declare type ESImport<T> = Promise<ESModule<T>>
	declare export type Component<T> = ESImport<ComponentType<T>>

	declare export type RouteDef<T> = {
		url : string,
		id : string,
		import : string,
		props : T,
	}

	declare export type Routes = RouteDef<*>[]

	declare export type Globals = $ReadOnly<{
		[string] : mixed,
		...,
	}>

	declare export type FrameDefinition = {
		// The image config, read from the asset file
		images? : ImageConfig,

		// The routes of the site, with their respective props
		routes : () => Promise<RouteDef<*>[]>,

		// Globals shared between js and css
		globals? : () => Promise<Globals>,

		// The dictionary used for compressing
		dictionary? : string[],

		// The browsers to build for
		browsers? : string[],
	}

	declare export function glob(...segments : string[]) : string[]

	declare export function asset(path : string) : Promise<Asset>
	declare export function Route<T> (url : string, component : Component<T>, props : T) : RouteDef<T>
	declare export function slug(s : string) : string
}
